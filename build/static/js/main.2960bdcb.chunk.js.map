{"version":3,"sources":["App.js","index.js"],"names":["UserNotFoundError","Error","UnknownError","LOADING_STATE","MESSAGE_TYPE","createFailureMessage","message","type","App","repos","setRepos","useState","username","setUsername","dataState","setDataState","setMessage","throwErrorIfNeeded","response","ok","status","onSuccess","showMessage","createSuccessMessage","onFailure","error","afterFetch","setTimeout","_jsxs","className","children","_jsx","concat","htmlFor","id","onChange","event","target","value","onClick","preventDefault","fetch","then","json","catch","finally","length","map","_ref","name","description","html_url","href","rel","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"qNAIA,MAAMA,UAA0BC,OAChC,MAAMC,UAAqBD,OAE3B,MAAME,EACE,OADFA,EAEK,UAGLC,EACK,UADLA,EAEK,UAOLC,EAAwBC,IAAO,CACnCC,KAAMH,EACNE,YA6HaE,MA1Hf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAE5BC,EAAUC,GAAeF,mBAAS,KAClCG,EAAWC,GAAgBJ,mBAASR,IACpCG,EAASU,GAAcL,mBAAS,MAejCM,EAAsBC,IAC1B,GAAIA,EAASC,GACX,OAAOD,EAGT,GAAwB,MAApBA,EAASE,OACX,MAAM,IAAIpB,EAAkB,yBAG9B,MAAM,IAAIE,EAAa,yBAOnBmB,EAAaZ,IACjBa,EA9C0BhB,KAAO,CACnCC,KAAMH,EACNE,YA4CciB,CAAqB,aACjCb,EAASD,IAGLe,EAAaC,IAEfH,EAAYjB,EADVoB,aAAiBzB,EACcyB,EAAMnB,QAEN,yBAGnCI,EAAS,KAGLgB,EAAaA,KACjBX,EAAaZ,IAGTmB,EAAehB,IACnBU,EAAWV,GACXqB,YAAW,IAAMX,EAAW,KAAK,MAGnC,OACEY,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,UAAAD,SACEC,cAAA,MAAAD,SAAI,uBAGNF,eAAA,QAAAE,SAAA,CACEC,cAAA,WAASF,UAAU,eAAcC,SAC9BxB,GACCyB,cAAA,KAAGF,UAAS,WAAAG,OAAa1B,EAAQC,MAAOuB,SACtCC,cAAA,UAAAD,SAASxB,EAAQA,cAKvBsB,eAAA,QAAMC,UAAU,aAAYC,SAAA,CAC1BF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,SAAOE,QAAQ,WAAUH,SAAC,oBAC1BC,cAAA,SAAOG,GAAG,WAAWC,SA9CTC,IACpBvB,EAAYuB,EAAMC,OAAOC,aAgDnBP,cAAA,UAAQF,UAAU,SAAStB,KAAK,SAASgC,QA1E3BH,IACpBA,EAAMI,iBAENzB,EAAaZ,GAEbsC,MAAM,gCAADT,OAAiCpB,EAAQ,WAC3C8B,KAAKzB,GACLyB,MAAMxB,GAAaA,EAASyB,SAC5BD,KAAKrB,GACLuB,MAAMpB,GACNqB,QAAQnB,IAgE0DI,SAAC,UAKlEF,eAAA,WAASC,UAAU,cAAaC,SAAA,CAC7BhB,IAAcX,GACb4B,cAAA,OAAKF,UAAU,WAEhBf,IAAcX,IAAuBM,EAAMqC,QAC1Cf,cAAA,KAAGF,UAAU,qBAAoBC,SAAC,aAEnChB,IAAcX,GAAsBM,EAAMqC,OAAS,GAClDlB,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAClCF,eAAA,KAAGC,UAAU,cAAaC,SAAA,CAAC,SAAOrB,EAAMqC,OAAO,YAC/Cf,cAAA,MAAAD,SACGrB,GACCA,EAAMsC,KAAIC,IAAA,IAAC,GAAEd,EAAE,KAAEe,EAAI,YAAEC,EAAW,SAAEC,GAAUH,EAAA,OAC5CpB,eAAA,MAAIC,UAAU,WAAUC,SAAA,CACtBC,cAAA,KAAAD,SACEC,cAAA,KACEqB,KAAMD,EACNE,IAAI,sBACJhB,OAAO,SAAQP,SAEdmB,MAILlB,cAAA,KAAGF,UAAU,mBAAkBC,SAAEoB,GAAe,aAXpBhB,qBCxHlDoB,IAASC,OACPxB,cAACyB,IAAMC,WAAU,CAAA3B,SACfC,cAACvB,EAAG,MAENkD,SAASC,eAAe,U","file":"static/js/main.2960bdcb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\n\r\nclass UserNotFoundError extends Error {}\r\nclass UnknownError extends Error {}\r\n\r\nconst LOADING_STATE = {\r\n  IDLE: 'idle',\r\n  LOADING: 'loading',\r\n};\r\n\r\nconst MESSAGE_TYPE = {\r\n  SUCCESS: 'success',\r\n  FAILURE: 'failure',\r\n};\r\n\r\nconst createSuccessMessage = (message) => ({\r\n  type: MESSAGE_TYPE.SUCCESS,\r\n  message,\r\n});\r\nconst createFailureMessage = (message) => ({\r\n  type: MESSAGE_TYPE.FAILURE,\r\n  message,\r\n});\r\n\r\nfunction App() {\r\n  const [repos, setRepos] = useState([]);\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [dataState, setDataState] = useState(LOADING_STATE.IDLE);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setDataState(LOADING_STATE.LOADING);\r\n\r\n    fetch(`https://api.github.com/users/${username}/repos`)\r\n      .then(throwErrorIfNeeded)\r\n      .then((response) => response.json())\r\n      .then(onSuccess)\r\n      .catch(onFailure)\r\n      .finally(afterFetch);\r\n  };\r\n\r\n  const throwErrorIfNeeded = (response) => {\r\n    if (response.ok) {\r\n      return response;\r\n    }\r\n\r\n    if (response.status === 404) {\r\n      throw new UserNotFoundError('Github user not found');\r\n    }\r\n\r\n    throw new UnknownError('Something went wrong');\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n  const onSuccess = (repos) => {\r\n    showMessage(createSuccessMessage('Success!'));\r\n    setRepos(repos);\r\n  };\r\n\r\n  const onFailure = (error) => {\r\n    if (error instanceof UserNotFoundError) {\r\n      showMessage(createFailureMessage(error.message));\r\n    } else {\r\n      showMessage(createFailureMessage('Something went wrong'));\r\n    }\r\n\r\n    setRepos([]);\r\n  };\r\n\r\n  const afterFetch = () => {\r\n    setDataState(LOADING_STATE.IDLE);\r\n  };\r\n\r\n  const showMessage = (message) => {\r\n    setMessage(message);\r\n    setTimeout(() => setMessage(''), 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header>\r\n        <h1>Get Github Repos</h1>\r\n      </header>\r\n\r\n      <main>\r\n        <section className=\"message-area\">\r\n          {message && (\r\n            <p className={`message-${message.type}`}>\r\n              <strong>{message.message}</strong>\r\n            </p>\r\n          )}\r\n        </section>\r\n\r\n        <form className=\"input-area\">\r\n          <div className=\"field-username\">\r\n            <label htmlFor=\"username\">Github Username</label>\r\n            <input id=\"username\" onChange={handleChange}></input>\r\n          </div>\r\n\r\n          <button className=\"submit\" type=\"submit\" onClick={handleSubmit}>\r\n            Go\r\n          </button>\r\n        </form>\r\n\r\n        <section className=\"output-area\">\r\n          {dataState === LOADING_STATE.LOADING && (\r\n            <div className=\"circle\"></div>\r\n          )}\r\n          {dataState === LOADING_STATE.IDLE && !repos.length && (\r\n            <p className=\"output-status-text\">No repos</p>\r\n          )}\r\n          {dataState === LOADING_STATE.IDLE && repos.length > 0 && (\r\n            <div className=\"repo-list-container\">\r\n              <p className=\"repo-amount\">Found {repos.length} Repos</p>\r\n              <ul>\r\n                {repos &&\r\n                  repos.map(({ id, name, description, html_url }) => (\r\n                    <li className=\"repo-row\" key={id}>\r\n                      <p>\r\n                        <a\r\n                          href={html_url}\r\n                          rel=\"noopener noreferrer\"\r\n                          target=\"_blank\"\r\n                        >\r\n                          {name}\r\n                        </a>\r\n                      </p>\r\n\r\n                      <p className=\"repo-description\">{description || 'â€“'}</p>\r\n                    </li>\r\n                  ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}